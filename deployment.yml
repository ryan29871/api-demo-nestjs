apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-demo-nestjs-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-demo-nestjs-server
  template:
    metadata:
      labels:
        app: api-demo-nestjs-server
    spec:
      containers:
        - name: api-demo-nestjs-server
          image: gcr.io/$GCP_PROJECT_ID/api-demo-nestjs-server:$SEMAPHORE_WORKFLOW_ID
          ports:
            - containerPort: 80
          env:
            - name: NODE_ENV
              value: "production"
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 20

---

# apiVersion: v1
# kind: Service
# metadata:
#   name: api-demo-nestjs-server-lb
# spec:
#   selector:
#     app: api-demo-nestjs-server
#   type: LoadBalancer
#   ports:
#     - name: http
#       protocol: TCP
#       port: 80
#       targetPort: 3001

# ---

apiVersion: v1
kind: Service
metadata:
  name: api-demo-nestjs-service
  # annotations:
  #   cloud.google.com/neg: '{"ingress": true}'
spec:
  selector:
    app: api-demo-nestjs-server
  type: NodePort
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 3001

---

# apiVersion: v1
# kind: Service
# metadata:
#   name: api-demo-nestjs-service-2
# spec:
#   type: NodePort
#   selector:
#     app: api-demo-nestjs-server
#   ports:
#   - protocol: TCP
#     port: 80
#     targetPort: 3001

# ---

# apiVersion: v1
# kind: Secret
# metadata:
#   name: skotnickiservices
#   namespace: default
# data:
#   tls.crt: base64 encoded cert
#   tls.key: base64 encoded key
# type: kubernetes.io/tls

# ---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: api-demo-nestjs-server-ingress
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "kubernetes-ingress"
    networking.gke.io/managed-certificates: "skotnickiservices"
    # kubernetes.io/ingress.allow-http: "false"
spec:
  backend:
    serviceName: api-demo-nestjs-service
    servicePort: 80
  # tls:
  # - hosts:
  #   - www.skotnickiservices.com
  #   # secretName: skotnickiservices
  rules:
  - host: skotnickiservices.com
    http:
      paths:
      - path: /v1
        backend:
          serviceName: api-demo-nestjs-service
          servicePort: 80
      # - path: /v2/*
      #   backend:
      #     serviceName: api-demo-nestjs-service-2
      #     servicePort: 80

